package com.assignment5_3;

import java.util.Scanner;

public class Main {
	Scanner sc = new Scanner(System.in);
	Employee[] emps = null;
	public static void main(String[] args) {
		new Main();
	}
	Main(){
		
		emps = new Employee[3];
		emps[0] = new Employee("Jim Daley", 2000, 9, 4);
		emps[1] = new Employee("Bob Reuben", 1998, 1, 5);
		emps[2] = new Employee("Susan Randolph", 1997, 2,13);
		
		emps[0].createNewChecking(10500);
		emps[0].createNewSavings(1000);
		emps[0].createNewRetirement(9300);
		emps[1].createNewChecking(34000);
		emps[1].createNewSavings(27000);
		emps[2].createNewChecking(10038);
		emps[2].createNewSavings(12600);
		emps[2].createNewRetirement(9000);	
		
		System.out.println("Make a selection \nA.See Report of all accounts\nB.Make a deposit.\nC.Make a withdrawal");
		String sel=sc.next();
		
		switch(sel)
		{
		case "a":case"A":
			String info = getFormattedAccountInfo();
			System.out.println(info);
			break;
			
		
		
	
		case "b":case "B":
			System.out.println("Make deposit of \n0.Jim Daley\n1.Bob Reuben.\n2.Susan Randolph");
			int nameSel=sc.nextInt();
			
			switch(nameSel)
			{
			case 0:
				System.out.println("Make a selection \n0.Savings\n0.Checking.\n0.Retirement");
				int accSel=sc.nextInt();
				
				switch(accSel)
				{
				case 0:
					double amt=askamount();
					emps[0].deposit(AccountType.SAVINGS,amt);
			
					break;
					
					
				case 1:
					break;
				case 2:
					break;
				}
				break;
			case 1:
				break;
			case 2:
				break;
			}
			break;
		case "c":case "C":
			break;
		}
		
		
		
		
//		boolean withDrawl=emps[0].withdraw(AccountType.CHECKING,1585155);
//		if(withDrawl==false) System.out.println("Sorry you dont have sufficient balance");

//		for phase I – console outputY
		
//		System.out.print("See a report of all account balances? (y/n) ");
//		String answer = sc.next();
//		if(answer.equalsIgnoreCase("y")){
//			String info = getFormattedAccountInfo();
//			System.out.println(info);
//			//display info to console
//		}
//		else {
//			//do nothing..the application ends here
//		}		
		
		}
	
		String getFormattedAccountInfo() {
		StringBuilder str = new StringBuilder("");
		 for (Employee employee : emps) 
		 {
			 
			
			 str.append(employee.getFormattedAcctInfo());
			 str.append("\n");
			 			
		}
		return str.toString();
		}
		double askAmount()
		{
			System.out.println("Enter the amount you want to deposit");
		double	amountTodeposit=sc.nextDouble();
			return amountTodeposit;
		}
		
		
	}

